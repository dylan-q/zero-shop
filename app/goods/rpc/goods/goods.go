// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package goods

import (
	"context"

	"zero-shop/app/goods/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CategoryInfoResponse = pb.CategoryInfoResponse
	DetailRequest        = pb.DetailRequest
	GoodsInfoResponse    = pb.GoodsInfoResponse
	ListRequest          = pb.ListRequest
	ListResponse         = pb.ListResponse

	Goods interface {
		List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
		Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*GoodsInfoResponse, error)
	}

	defaultGoods struct {
		cli zrpc.Client
	}
)

func NewGoods(cli zrpc.Client) Goods {
	return &defaultGoods{
		cli: cli,
	}
}

func (m *defaultGoods) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	client := pb.NewGoodsClient(m.cli.Conn())
	return client.List(ctx, in, opts...)
}

func (m *defaultGoods) Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*GoodsInfoResponse, error) {
	client := pb.NewGoodsClient(m.cli.Conn())
	return client.Detail(ctx, in, opts...)
}
